
#include <iostream>
#include <iomanip>
#include <limits>
#include <cmath>
#include <cfenv>

#include "iRRAM.h"
#include "../../../../Source/backend/points.h"
#include "../../../../Source/backend/self_math.h"
#include "../../../../Source/backend/gamma.h"
#include "iRRAM/lib.h"

int iRRAM::MAXiterationnum = 30;
bool iRRAM::enableReiterate  = true;
bool iRRAM::alwaysenableReiterate  = true;

using namespace std;
using namespace iRRAM;


double irram_sintan(double a, double x)
{
	REAL a_real(a);
	REAL x_real(x);
	double r;
	REAL r_real;

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(4.426373699520133e-308<=a)&&(a<=9.64641178539536e-308)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(1.6948708374261012e-307<=a)&&(a<=3.9249341671776736e-284)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(4.649806262146611e-284<=a)&&(a<=3.4356324368853e-283)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(5.906542297452248e-282<=a)&&(a<=2.755134209599056e-274)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(2.0318943730762596e-272<=a)&&(a<=2.7738693844230365e-271)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(3.3315755901300146e-269<=a)&&(a<=2.6548839261917256e-254)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(4.21696697671564e-253<=a)&&(a<=5.311576461986012e-253)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(3.557980324973411e-249<=a)&&(a<=7.333672713124773e-246)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(4.923454646654538e-240<=a)&&(a<=2.4061062418431877e-232)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(4.272696623841612e-231<=a)&&(a<=6.462408199985713e-230)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(4.29761774789014e-226<=a)&&(a<=5.798260580495262e-225)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(3.967510616744351e-224<=a)&&(a<=1.5997196082822979e-223)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(4.9038714382828537e-222<=a)&&(a<=9.4258671998903e-222)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(7.885285658528457e-217<=a)&&(a<=2.4582235253511398e-216)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(7.473669641528526e-214<=a)&&(a<=2.3074504388938207e-212)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(2.8175377090049797e-212<=a)&&(a<=7.320924502826052e-210)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(6.596850714120958e-209<=a)&&(a<=7.373701142864517e-209)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(1.0868874069389249e-206<=a)&&(a<=3.6297312271521133e-202)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(1.0444615897969181e-201<=a)&&(a<=1.1313898239841612e-201)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(1.218926513538059e-201<=a)&&(a<=2.238794931718217e-200)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(2.438847349661079e-199<=a)&&(a<=1.8638298136405453e-197)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(6.187473189394183e-195<=a)&&(a<=2.4179431708363923e-194)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(7.147228547210765e-193<=a)&&(a<=1.0556621508935791e-192)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(3.2693627627277624e-185<=a)&&(a<=1.5488962169710398e-183)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(9.065424123450533e-182<=a)&&(a<=1.6148243079533043e-180)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(1.0934680498544342e-179<=a)&&(a<=6.143055294468906e-179)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(2.0452078591736813e-177<=a)&&(a<=5.246383557371332e-177)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(2.7095574315168934e-174<=a)&&(a<=1.8863566328857507e-172)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(1.050886346755769e-168<=a)&&(a<=1.9069551156895272e-168)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(2.702333059655267e-159<=a)&&(a<=4.9934519412223734e-158)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(9.40725411246587e-157<=a)&&(a<=1.757871640370579e-156)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(2.1669089161143363e-149<=a)&&(a<=3.8905962201375516e-149)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(1.1624849687866556e-146<=a)&&(a<=5.003542481100123e-146)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(4.736261956112328e-143<=a)&&(a<=1.0734127479087532e-141)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(3.4413611179089185e-140<=a)&&(a<=2.3220924752490645e-133)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(2.495492460711346e-132<=a)&&(a<=5.912179201129228e-132)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(2.2981744918168988e-129<=a)&&(a<=3.387528007535946e-129)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(8.154123062603018e-128<=a)&&(a<=1.953495545504702e-118)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(6.293402389701233e-113<=a)&&(a<=6.382375629617307e-113)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(1.1114129271377846e-107<=a)&&(a<=1.134133197038909e-107)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(7.29206165132118e-105<=a)&&(a<=7.550127481531e-102)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(1.793285316300961e-100<=a)&&(a<=2.015354578447418e-100)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(4.252005104708829e-99<=a)&&(a<=7.325399104906234e-98)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(3.986283749270394e-94<=a)&&(a<=7.487162872529241e-94)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(7.939187086126673e-86<=a)&&(a<=1.502822334887249e-85)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(1.6189174735842615e-84<=a)&&(a<=4.373721508859242e-83)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(1.0832536067257414e-81<=a)&&(a<=1.1360161629319568e-81)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(6.749829020803986e-73<=a)&&(a<=9.886163559335155e-73)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(2.942296925238574e-59<=a)&&(a<=3.785510202018267e-59)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(1.8142400579696498e-56<=a)&&(a<=4.4289420443586965e-55)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)&&(8.478927914741885e-32<=a)&&(a<=8.478959252545897e-32)) {
		r = exp(a*x) - 1;
		return r;
	}

	if((0<=a)&&(a<=1)&&(0<=x)&&(x<=1)) {
		r_real = iRRAM::exp((REAL)a_real*x_real) - 1;
		return r_real.as_double();
	}

	return r;
}

void compute() {
	std::fesetround(FE_DOWNWARD);
	std::string a_str,x_str;
	iRRAM::cin >> a_str >> x_str;
	double a_double = binary2double(a_str);
	double x_double = binary2double(x_str);
	double r_double = irram_sintan(a_double, x_double);
	iRRAM::cout << double2binary(r_double) << "\n";
}

